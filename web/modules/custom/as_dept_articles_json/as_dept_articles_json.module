<?php

use Drupal\Core\Routing\RouteMatchInterface;


function as_dept_articles_json_get_article_json($remote_uuid)
{
  //set cache id (verify parameters are safe values to use as cache id)
  $cid = "as_article_json:" . $remote_uuid;
  $person_data = [];
  //check cache
  if ($cache = \Drupal::cache('data')->get($cid)) {
    //fetch cache data
    $article_data = $cache->data;
    //check cache expiration
  }
  // if no data check url
  else {
    $url = 'https://as.cornell.edu/jsonapi/node/article/?filter[id]=' . $remote_uuid .'&include=field_image.field_media_image';
    //fetch data and set cache
    $data = file_get_contents($url);
    $json = json_decode($data, true);
    if (!empty($json)) {
      if (!empty($json['data'])) {
        $article_data['data'] = $json['data'];
        }
      if (!empty($json['included'])) {
    $article_data['included'] = $json['included'];
        }
    \Drupal::cache('data')
      ->set($cid, $json, time() + 360);
    }
  }
  //return data
  return $article_data;
}



function as_dept_articles_json_get_term_json($term_uuid,$term_type)
{
  //set cache id (verify parameters are safe values to use as cache id)
  $term_type = str_replace('--', '/', $term_type);
  $cid = "as_people_dept_json:" . $term_type.'_'. $term_uuid;
  $term_data = [];

  //check cache
  if ($cache = \Drupal::cache('data')->get($cid)) {
    //fetch cache data
    $term_data = $cache->data;
    //check cache expiration
  }
  // if no data check url
  else {
    $url = 'https://as.cornell.edu/jsonapi/'.$term_type.'/'. $term_uuid;
    //fetch data and set cache
    $data = file_get_contents($url);
    $json = json_decode($data, true);
    $term_data['data'] = $json['data'];
    \Drupal::cache('data')
      ->set($cid, $json, time() + 360);
  }
  //return data
  return $term_data;
}

function as_dept_articles_json_get_person_json($person_uuid)
{

  $person_data = [];
  if (!empty($person_uuid) && $person_uuid <> 'missing') {
    //using people stub uuid get full person record uuid from as.cornell.edu
    $url = 'https://as.cornell.edu/jsonapi/page_component_entity/person/'. $person_uuid;
    //fetch data
    $data = file_get_contents($url);
    $json = json_decode($data, true);
    $people_uuid = $json['data']['attributes']['field_people_uuid'];
    //go get full,person record json from people.as.cornell.edu
      //set cache id (verify parameters are safe values to use as cache id)
      $cid = "as_people_json:" . $people_uuid;
      //check cache
      if ($cache = \Drupal::cache('data')->get($cid)) {
        //fetch cache data
        $person_data = $cache->data;
        //check cache expiration
      }
      // if no data check url
      else {
        $url = 'https://people.as.cornell.edu/jsonapi/node/person/?filter[id]=' . $people_uuid .'&include=field_image.field_media_image';
        //fetch data and set cache
        $data = file_get_contents($url);
        $json = json_decode($data, true);

        if (!empty($json)) {
          if (!empty($json['data'])) {
            $person_data['data'] = $json['data'];
            }
          if (!empty($json['included'])) {
        $person_data['included'] = $json['included'];
            }
        \Drupal::cache('data')
          ->set($cid, $json, time() + 360);
        }
      }

  return $person_data;
 }
}


function as_dept_articles_json_get_article_body_json($article_component_uuid,$article_component_type)
{
  //set cache id (verify parameters are safe values to use as cache id)
  $article_component_type = str_replace('--', '/', $article_component_type);
  $cid = "as_article_body_json:" . $article_component_type.'_'.$article_component_uuid;
  $article_body = [];
  //check cache
  if ($cache = \Drupal::cache('data')->get($cid)) {
    //fetch cache data
    $article_body = $cache->data;
    //check cache expiration
  }
  // if no data check url
  else {
    $url = 'https://as.cornell.edu/jsonapi/'.$article_component_type.'/'.$article_component_uuid;
    //fetch data and set cache
    $data = file_get_contents($url);
    $json = json_decode($data, true);
    $article_body['data'] = $json['data'];
    \Drupal::cache('data')
      ->set($cid, $json, time() + 360);
  }
  //return data
  return $article_body;
}



/**
 * Implements hook_help().
 */
function as_dept_articles_json_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    case 'help.as_articles_json':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The A&S Articles JSON module provides articles from as.cornell.edu via JSONAPI for use in articles template.') . '</p>';

      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function as_dept_articles_json_theme($existing, $type, $theme, $path) {
  return [
    'article' => [
      'variables' => ['pathtoken' => NULL],
    ],
  ];
}
